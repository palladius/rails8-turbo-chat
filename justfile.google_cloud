
# Note, some targets have Riccardo setup
# TODO - fix them

[group('gcp')]
gcp-status:
    #!/bin/bash
    . .env
    echo "üå± PROJECT_ID: ${PROJECT_ID}"
    echo "üå± GCS_BUCKET: ${GCS_BUCKET}"

## Copied from apps-portfolio - note project id is written here -> UGLY
# List latest 10 CB builds, possible the first might still be running
[group('gcp')]
cloud-build-list: gcp-status
    #!/bin/bash
    . .env
    gcloud builds list --project=$PROJECT_ID --limit=10

# Show the log of a specific Cloud Build, eg 7c82188e-485a-4735-a70d-fb303fbfe5a0
[group('gcp')]
cloud-build-show-log build_id: gcp-status
    #!/bin/bash
    . .env
    echo "Showing log for build ID: {{build_id}}. Use --stream to follow the log indefinitely (you can do it, but I want Gemini NOT to do it)."
    gcloud builds log {{build_id}} --project=$PROJECT_ID

[group('gcp')]
cloud-run-dev-logs: gcp-status
    #!/bin/bash
    . .env
    echo "‚òÅÔ∏è  Fetching logs for Cloud Run dev environment..."
    gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=rails8-turbo-chat-dev" --project='$PROJECT_ID' --limit=100 --format="value(timestamp, severity, textPayload)"

[group('gcp')]
cloud-run-prod-logs: gcp-status
    #!/bin/bash
    . .env
    echo "‚òÅÔ∏è  Fetching logs for Cloud Run prod environment..."
    gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=rails8-turbo-chat-prod" --project='$PROJECT_ID' --limit=100 --format="value(timestamp, severity, textPayload)"

[group('gcp')]
auth: gcp-status
    #!/bin/bash
    . .env
    gcloud auth login


# CB_SUBSTITUTIONS=_RAILS_MASTER_KEY="YOUR_RAILS_MASTER_KEY_HERE",_GEMINI_API_KEY="YOUR_GEMINI_API_KEY_HERE"
# [Cloud Build] submit local target
# cloudbuild-submit:
#     gcloud builds submit . --config cloudbuild.yaml   --substitutions="$CB_SUBSTITUTIONS"

